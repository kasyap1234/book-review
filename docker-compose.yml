---
services:
  database:
    container_name: database
    image: postgres:12.8
    restart: always
    environment:
      - POSTGRES_USER=pg
      - POSTGRES_PASSWORD=pass
      - POSTGRES_DB=crud
    ports:
      - '5432:5432'
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - microservices-network
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - microservices-network
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - '3000:3000'
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - microservices-network
    depends_on:
      - prometheus
  book-service:
    build:
      context: ./services/book
      dockerfile: Dockerfile.book
    ports:
      - '50051:50051'
    networks:
      - microservices-network
    environment:
      - METRICS_PORT=2111
    expose:
      - 2111
  user-service:
    build:
      context: ./services/user
      dockerfile: Dockerfile.user
    ports:
      - '50052:50052'
    networks:
      - microservices-network
    environment:
      - METRICS_PORT=2112
    expose:
      - 2112
  review-service:
    build:
      context: ./services/review
      dockerfile: Dockerfile.review
    ports:
      - '50053:50053'
    networks:
      - microservices-network
    environment:
      - METRICS_PORT=2113
    expose:
      - 2113
networks:
  microservices-network:
    driver: bridge
volumes:
  db: null
  prometheus_data: null
  grafana_data: null